{
  "exerciseSheet": false,
  "blocks": [
    {
      "type": "code",
      "text": "(** * Syntax extensions for Computer programs for analysis\n\n      This document contains some very preliminary experiments with \n      notations, ltac definitions and tactic notations to make it possible \n      to stay closer to mathematical language when writing proofs in Coq. *)\n\n(** This file is supposed to be put in a folder \n    wplib/Tactics/ and intended to be compiled, \n    with \n    sercomp --mode=vo \n           -R \"wplib\",\"wplib\"\n           \"wplib/Tactics/TacticsContra.v\"*)\n\nRequire Import Rbase.\nRequire Import Rfunctions.\nRequire Import SeqSeries.\nRequire Import Rtrigo.\nRequire Import Ranalysis.\nRequire Import Integration.\nRequire Import micromega.Lra.\nRequire Import Omega.\nRequire Import Max.\nRequire Import Classical.\n(* Require Import Unicode.Utf8. *)\n\n(** * Classical tactics *)\n    \n(** TODO: problem with current implementation is that \n    the assumption is not explicitly named. *)\nLtac contra :=\n  match goal with\n  | [|- ?X] => destruct (classic X); try assumption\n  | _ => idtac \"failure of tactic\"\n  end.\n\nTactic Notation \"We\" \"argue\" \"by\" \"contradiction\" :=\n  contra.\n  \nTactic Notation \"Contradiction\" := contradiction."
    }
  ]
}